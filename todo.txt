BUILD:

For future reference, here's the build system config for sublime text 3:
{
	"shell_cmd": "build.bat",
	"working_dir": "${file_path}",
	"file_regex": "^(...*?)[(]([0-9]*)[)]",
	"shell": true,
	"encoding": "gb2312"
}
Took me WAY TOO LONG to make that work.

---------------------------------------------
TODO:
---------------------------------------------

MASSAGING THINGS INTO A WORKABLE STATE:
- Texture loading separate from OpenGL (assets.cpp)
	- Probably put things in an Assets struct for access later.
- UITheme out of renderer
- Projection matrix in camera, not in the batch
	- World and UI cameras
- Game produces list of abstract draw instructions, then passed to the renderer
- Make fonts actually work
	- Probably split render instructions into sprites/text

GAME:
- Draw a map
- Draw a grid over it
- Create pipes
- They link

BUGS:
- Flickering of some things. Not sure if the sorter might be off-by-one?
- Unloading Fraps does something funny with our Window reference, causing a crash.

Rendering 2.0:
- Stop passing a size to drawSprite()! Will always draw at a consistent size.
- At some point, need to distinguish between "flat" sprites (e.g. field)  and "tall" ones (e.g. barn, farmhouse, farmer).
- Replace 'isUI' nonsense with something better?
- Draw things with an offset, defined per-texture-region(?)
- Flash funds label when it changes
- Probably replace the binary search for glyphs with something better?

Asset packing:
- Pack asset PNGs into a set of standard-sized ones, with 1 px of padding around them
	for the bilinear filtering
- Store TextureRegion information in a little binary file
- Read data from these rather than hard-coded filenames


ENGINE:
- Audio!
	- Sound effects
	- Pitch shifting
	- Music
- An actual random number generator!
- Temporary memory automatically closes when it leaves scope?
- Scenarios
	- A background image, a size, etc.
