---------------------------------------------
TODO:
---------------------------------------------

MASSAGING THINGS INTO A WORKABLE STATE:
- Asset reloading:
	- Cursors! Hide the cursor before reload, then show it again after.
	
- Cameras and sizes. Cameras shouldn't all know the screen size. They should be sized in their own units.
	- (Which for uiCamera IS the screen size. But worldCamera, not so much.)
- Get rid of BitmapFontCache. It's too restrictive.
- Load ui theme from a file
- Load texture region information from a file
- Handle cursors ourselves? Not sure about latency.
- Check for the flicker bug while we have so few things being drawn.
- Asset system dynamic allocations. e.g. So we don't have to predetermine number of texture regions.

- Arenas:
	- Is RenderArena used?
		- Only for renderer info, and temporarily for loading shaders. So it can go soon!
	- Is temporary memory in renderer init used?
	- Use several arenas, not just all sub-arenas
	- Stretchy arenas
	- Make temporary arenas include a memory arena so we don't need 2 readFileAsString definitions, etc.


GAME:
- Draw a map
- Draw a grid over it
- Create pipes
- They link

BUGS:
- Flickering of some things. Not sure if the sorter might be off-by-one?
- Unloading Fraps does something funny with our Window reference, causing a crash.

Rendering 2.0:
- Stop passing a size to drawSprite()! Will always draw at a consistent size.
- At some point, need to distinguish between "flat" sprites (e.g. field)  and "tall" ones (e.g. barn, farmhouse, farmer).
- Draw things with an offset, defined per-texture-region(?)
- Flash funds label when it changes
- Probably replace the binary search for glyphs with something better?

Asset packing:
- Pack asset PNGs into a set of standard-sized ones, with 1 px of padding around them
	for the bilinear filtering
- Store TextureRegion information in a little binary file
- Read data from these rather than hard-coded filenames


ENGINE:
- Audio!
	- Sound effects
	- Pitch shifting
	- Music
- An actual random number generator!
- Temporary memory automatically closes when it leaves scope?
- Scenarios
	- A background image, a size, etc.

---------------------------------------------
NOTES:
---------------------------------------------

BUILD:

For future reference, here's the build system config for sublime text 3:
{
	"shell_cmd": "build.bat",
	"working_dir": "${file_path}",
	"file_regex": "^(...*?)[(]([0-9]*)[)]",
	"shell": true,
	"encoding": "gb2312"
}
Took me WAY TOO LONG to make that work.