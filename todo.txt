------------------------------------------------
TODO: https://trello.com/b/0Z1oVdg9/under-london
------------------------------------------------
I don't know whether I prefer keeping the list here or on Trello.
Trello is nice, but it's ALL THE WAY OVER THERE in a different program!

Arenas:
- Is RenderArena used?
	- Only for renderer info, and temporarily for loading shaders. So it can go soon!
- Is temporary memory in renderer init used?
- Figure out how to prevent non-temp allocations happening when temp mem is open.

- Check for the flicker bug while we have so few things being drawn.

- UI Theme: What is it?!?!
	- All the information about how to draw the UI.
	- So, font/colour/padding etc for a button, or a menu item.
	- Do we want styles within this? So you say "this is a 'fancy' button, this is a 'normal' button"?
	- If we want to go crazy we could define the UI itself in data. But that sounds awkward and unnecessary.
		- Though I think I want to do that for the fancy text screens, as planned.
		  (Victiorian typography, lots of different fonts and sizes and styles.)

Asset system:
- Asset packer of some kind. Maybe just creates an assets table?
- Load ui theme from a file
- Load texture region information from a file
- Asset system dynamic allocations. e.g. So we don't have to predetermine number of texture regions.
- Strings! Translateable and stored as assets.

Debugging:
- Some kind of profiling system
- Debug console?
- Hot swapping code?!?! SDL has a fancy dll loader (SDL_loadso.h)

GAME:
- Menu / Game are separate code.
- Draw a map
- Draw a grid over it
- Create pipes
- They link

BUGS:
- Flickering of some things. Not sure if the sorter might be off-by-one?
- Unloading Fraps does something funny with our Window reference, causing a crash.

Rendering 2.0:
- Stop passing a size to drawSprite()! Will always draw at a consistent size.
- At some point, need to distinguish between "flat" sprites (e.g. field)  and "tall" ones (e.g. barn, farmhouse, farmer).
- Draw things with an offset, defined per-texture-region(?)
- Flash funds label when it changes
- Probably replace the binary search for glyphs with something better?
- Handle cursors ourselves? Not sure about latency.

Asset packing:
- Pack asset PNGs into a set of standard-sized ones, with 1 px of padding around them
	for the bilinear filtering
- Store TextureRegion information in a little binary file
- Read data from these rather than hard-coded filenames


ENGINE:
- Audio!
	- Sound effects
	- Pitch shifting
	- Music
- An actual random number generator!
- Temporary memory automatically closes when it leaves scope?
- Scenarios
	- A background image, a size, etc.

---------------------------------------------
NOTES:
---------------------------------------------

BUILD:

For future reference, here's the build system config for sublime text 3:
{
	"shell_cmd": "build.bat",
	"working_dir": "${file_path}",
	"file_regex": "^(...*?)[(]([0-9]*)[)]",
	"shell": true,
	"encoding": "gb2312"
}
Took me WAY TOO LONG to make that work.