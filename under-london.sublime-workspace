{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"back",
				"backgroundSize"
			],
			[
				"glTex",
				"glTextureID"
			],
			[
				"ren",
				"renderArena"
			],
			[
				"World",
				"WorldBuffer"
			],
			[
				"world",
				"worldBuffer"
			],
			[
				"max",
				"maxItems"
			],
			[
				"Rend",
				"RenderItem"
			],
			[
				"Render",
				"RenderBuffer"
			],
			[
				"Rende",
				"RenderBuffer"
			],
			[
				"window",
				"windowSize"
			],
			[
				"input",
				"inputState"
			],
			[
				"mou",
				"mousePosNormalised"
			],
			[
				"win",
				"windowSize"
			],
			[
				"wi",
				"windowWidth"
			],
			[
				"Tex",
				"TextureAssetType"
			],
			[
				"tex",
				"textureID"
			],
			[
				"ass",
				"assetsArena"
			],
			[
				"ini",
				"initMemoryArena"
			],
			[
				"Texture",
				"TextureAtlasItemCount"
			],
			[
				"Text",
				"TextureState"
			],
			[
				"Shad",
				"ShaderProgram_Untextured"
			],
			[
				"TEXTURE",
				"TEXTURE_ID_NONE"
			],
			[
				"curre",
				"currentShader"
			],
			[
				"Sha",
				"ShaderProgram_Textured"
			],
			[
				"ac",
				"activeShader"
			],
			[
				"render",
				"renderer"
			],
			[
				"GLShade",
				"GLShaderProgram"
			],
			[
				"Shader",
				"ShaderProgram_Count"
			],
			[
				"shad",
				"shaderData"
			],
			[
				"progr",
				"programSuccess"
			],
			[
				"isV",
				"isVertexShaderCompiled"
			],
			[
				"isv",
				"isVertexShaderCompiled"
			],
			[
				"frag",
				"fragmentShaderFilename"
			],
			[
				"ver",
				"vertexShaderFilename"
			],
			[
				"vertex",
				"vertexShaderFilename"
			],
			[
				"sha",
				"shaderProgramID"
			],
			[
				"sh",
				"shaderTextured"
			],
			[
				"load",
				"loadShader"
			],
			[
				"GLShad",
				"GLShaderProgram"
			],
			[
				"text",
				"textureWidth"
			],
			[
				"succ",
				"successfullyLoadedAllTextures"
			],
			[
				"firstBu",
				"firstBufferIndex"
			],
			[
				"first",
				"firstBufferVertex"
			],
			[
				"GLTex2",
				"GL_TEXTURE_2D"
			],
			[
				"GL_tex",
				"GL_TEXTURE_2D"
			],
			[
				"L",
				"LangGreek"
			],
			[
				"rea",
				"readUnicodeChar"
			],
			[
				"men",
				"menuButtonRect"
			],
			[
				"uiRe",
				"uiRectCount"
			],
			[
				"ui",
				"uiState"
			],
			[
				"cityN",
				"cityNameMaxLength"
			],
			[
				"Gam",
				"GameStatus_Won"
			],
			[
				"game",
				"gameStatus"
			],
			[
				"gam",
				"gameStatus"
			],
			[
				"Setup",
				"GameStatus_Setup"
			],
			[
				"Game",
				"GameStatus_Quit"
			],
			[
				"update",
				"updateAndRenderGameUI"
			],
			[
				"short",
				"shortcutKey"
			],
			[
				"BitmapF",
				"BitmapFontChar"
			],
			[
				"lin",
				"lineHeight"
			],
			[
				"ma",
				"maxWidth"
			],
			[
				"curr",
				"currentLineWidth"
			],
			[
				"li",
				"lineCount"
			],
			[
				"st",
				"startOfCurrentWord"
			],
			[
				"lo",
				"longestLineLength"
			],
			[
				"tool",
				"tooltipPadding"
			],
			[
				"inp",
				"inputState"
			],
			[
				"textB",
				"textBufferLength"
			],
			[
				"te",
				"textColor"
			],
			[
				"act",
				"actionMode"
			],
			[
				"SDL",
				"SDL_SCANCODE_UNKNOWN"
			],
			[
				"camer",
				"cameraCentre"
			],
			[
				"is",
				"isSorted"
			],
			[
				"G",
				"GameStatus_Won"
			],
			[
				"End",
				"endTemporaryMemory"
			],
			[
				"begi",
				"beginTemporaryMemory"
			],
			[
				"file",
				"fileLength"
			],
			[
				"ce",
				"centrePos"
			],
			[
				"TeA",
				"TextureAtlasItem_Potato"
			],
			[
				"FIeldSta",
				"FieldState_Gathering"
			],
			[
				"har",
				"harvestedCropsWaiting"
			],
			[
				"isP",
				"isPathable"
			],
			[
				"_add",
				"_addPathNodeToQueue"
			],
			[
				"paGr",
				"pathGroups"
			],
			[
				"pat",
				"pathGroupCount"
			],
			[
				"pa",
				"pathGroup"
			],
			[
				"path",
				"pathGroupCount"
			],
			[
				"end",
				"endTemporaryMemory"
			],
			[
				"begin",
				"beginning"
			],
			[
				"par",
				"parentArena"
			],
			[
				"temp",
				"tempArena"
			],
			[
				"mem",
				"memoryArena"
			],
			[
				"que",
				"queuedNode"
			],
			[
				"oep",
				"openQueue"
			],
			[
				"open",
				"openQueue"
			],
			[
				"su",
				"subArena"
			],
			[
				"day",
				"dayEndPos"
			],
			[
				"f",
				"floodFillPathingConnectivity"
			],
			[
				"fill",
				"fillValue"
			],
			[
				"upd",
				"updatePathingConnectivity"
			],
			[
				"memory",
				"memory_arena"
			],
			[
				"Tem",
				"TempArena"
			],
			[
				"Bitm",
				"BitmapFont"
			],
			[
				"fi",
				"firstOfType"
			],
			[
				"fir",
				"firstBuildingOfType"
			],
			[
				"ne",
				"nextOfType"
			],
			[
				"clo",
				"closestBarn"
			],
			[
				"buil",
				"buildingIndex"
			],
			[
				"bui",
				"buildingIndex"
			],
			[
				"building",
				"buildingID"
			],
			[
				"ba",
				"barnPosition"
			],
			[
				"jo",
				"jobData"
			],
			[
				"field",
				"fieldPosition"
			],
			[
				"CAM",
				"CAMERA_MARGIN"
			],
			[
				"Job",
				"JobData_Plant"
			],
			[
				"textBo",
				"textboxBackgroundColor"
			],
			[
				"backgr",
				"backgroundPadding"
			],
			[
				"BitmapFont",
				"BitmapFontCachedText"
			],
			[
				"cu",
				"currentChar"
			],
			[
				"Bitmao",
				"BitmapFontChar"
			],
			[
				"BMFont",
				"BMFontBlockHeader"
			],
			[
				"BMFontB",
				"BMFontBlock_Common"
			],
			[
				"GL_T",
				"GL_TEXTURE_2D_ARRAY"
			],
			[
				"wor",
				"worldBuffer"
			],
			[
				"buff",
				"bufferSize"
			],
			[
				"derm",
				"demolishColor"
			],
			[
				"proj",
				"projectionMatrix"
			],
			[
				"iden",
				"identityMatrix4"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/render_gl.cpp",
			"settings":
			{
				"buffer_size": 19469,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/game.cpp",
			"settings":
			{
				"buffer_size": 9212,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/assets.h",
			"settings":
			{
				"buffer_size": 882,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/font.cpp",
			"settings":
			{
				"buffer_size": 7458,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/assets.cpp",
			"settings":
			{
				"buffer_size": 3667,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/render.h",
			"settings":
			{
				"buffer_size": 2515,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/main.cpp",
			"settings":
			{
				"buffer_size": 4959,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "Searching 31 files for \"drawQuad\" (regex, case sensitive)\n\nC:\\Users\\Sam\\Documents\\under-london\\src\\render_gl.cpp:\n  461  }\n  462  \n  463: void drawQuad(RenderBuffer *buffer, RealRect rect, real32 depth,\n  464  \t\t\t\tGLint textureID, RealRect uv, V4 color)\n  465  {\n  ...\n  481  \tGLint textureID = (textureAtlasItem > 0) ? region->textureID : TEXTURE_ID_NONE;\n  482  \n  483: \tdrawQuad(buffer, rectCentreSize(position, size), depth, textureID, region->uv, color);\n  484  }\n  485  \n  486  void drawRect(RenderBuffer *buffer, RealRect rect, real32 depth, V4 color)\n  487  {\n  488: \tdrawQuad(buffer, rect, depth, TEXTURE_ID_NONE, {}, color);\n  489  }\n  490  \n\n3 matches in 1 file\n\n\nSearching 31 files for \"drawSprite\" (regex, case sensitive)\n\nC:\\Users\\Sam\\Documents\\under-london\\src\\font.cpp:\n  339  \t\tspriteIndex++)\n  340  \t{\n  341: \t\tdrawSprite(&renderer->uiBuffer, cache->sprites + spriteIndex, v3(topLeft.x, topLeft.y, depth));\n  342  \t}\n  343  }\n\nC:\\Users\\Sam\\Documents\\under-london\\src\\render_gl.cpp:\n  447  }\n  448  \n  449: void drawSprite(RenderBuffer *buffer, Sprite *sprite, V3 offset)\n  450  {\n  451  \tif (buffer->itemCount >= buffer->maxItems)\n\n2 matches across 2 files\n\n\nSearching 31 files for \"drawSprite\" (regex, case sensitive)\n\nC:\\Users\\Sam\\Documents\\under-london\\src\\font.cpp:\n  339  \t\tspriteIndex++)\n  340  \t{\n  341: \t\t// drawSprite(&renderer->uiBuffer, cache->sprites + spriteIndex, v3(topLeft.x, topLeft.y, depth));\n  342  \t}\n  343  }\n\nC:\\Users\\Sam\\Documents\\under-london\\src\\render_gl.cpp:\n  447  }\n  448  \n  449: void drawSprite(RenderBuffer *buffer, Sprite *sprite, V3 offset)\n  450  {\n  451  \tif (buffer->itemCount >= buffer->maxItems)\n\n2 matches across 2 files\n\n\nSearching 31 files for \"makeSprite\" (regex, case sensitive)\n\nC:\\Users\\Sam\\Documents\\under-london\\src\\font.cpp:\n  250  \t\t\t\t{\n  251  \t\t\t\t\tstate.endOfCurrentWord = result->sprites + result->spriteCount++;\n  252: \t\t\t\t\t*state.endOfCurrentWord = makeSprite(\n  253  \t\t\t\t\t\trectXYWH(state.position.x + (real32)c->xOffset, state.position.y + (real32)c->yOffset,\n  254  \t\t\t\t\t\t\t\t (real32)c->size.w, (real32)c->size.h),\n  ...\n  276  \t\t// \t\t{\n  277  \t\t// \t\t\tstate.endOfCurrentWord = result->sprites + result->spriteCount++;\n  278: \t\t// \t\t\t*state.endOfCurrentWord = makeSprite(\n  279  \t\t// \t\t\t\trectXYWH(state.position.x + (real32)c->xOffset, state.position.y + (real32)c->yOffset,\n  280  \t\t// \t\t\t\t\t\t (real32)c->size.w, (real32)c->size.h),\n\nC:\\Users\\Sam\\Documents\\under-london\\src\\render_gl.cpp:\n  435  }\n  436  \n  437: inline Sprite makeSprite(RealRect rect, real32 depth, GLint textureID, RealRect uv, V4 color)\n  438  {\n  439  \tSprite sprite = {};\n\n3 matches across 2 files\n\n\nSearching 31 files for \"drawTextureAtlasItem\" (regex, case sensitive)\n\nC:\\Users\\Sam\\Documents\\under-london\\src\\game.cpp:\n  137  \t// Draw terrain\n  138  \tV2 backgroundSize = v2(2000.0f / TILE_SIZE, 1517.0f / TILE_SIZE);\n  139: \tdrawTextureAtlasItem(glRenderer, &glRenderer->worldBuffer, TextureAssetType_Map1, backgroundSize * 0.5f, backgroundSize, 0);\n  140  // \tfor (int32 y = (cameraBounds.y < 0) ? 0 : (int32)cameraBounds.y;\n  141  // \t\t(y < gameState->city.height) && (y < cameraBounds.y + cameraBounds.h);\n  ...\n  207  \t\t\tdefault: {\n  208  \t\t\t\tV2 drawPos = centre(building.footprint);\n  209: \t\t\t\tdrawTextureAtlasItem(glRenderer, &glRenderer->worldBuffer, def->textureAtlasItem,\n  210  \t\t\t\t \tdrawPos, v2(building.footprint.dim), depthFromY(drawPos.y), drawColor);\n  211  \t\t\t} break;\n\nC:\\Users\\Sam\\Documents\\under-london\\src\\render_gl.cpp:\n  447  }\n  448  \n  449: void drawTextureAtlasItem(GL_Renderer *renderer, RenderBuffer *buffer, TextureAssetType textureAtlasItem,\n  450  \t\t\t\tV2 position, V2 size, real32 depth, V4 color)\n  451  {\n  ...\n  755  \t\tanimator->frameCounter -= framesElapsed;\n  756  \t}\n  757: \tdrawTextureAtlasItem(renderer, buffer, animator->animation->frames[animator->currentFrame],\n  758  \t\t                 worldTilePosition, size, depth, color);\n  759  }\n\nC:\\Users\\Sam\\Documents\\under-london\\src\\render_gl.h:\n   94  }\n   95  \n   96: void drawTextureAtlasItem(GL_Renderer *renderer, RenderBuffer *buffer, TextureAssetType textureAtlasItem,\n   97  \t\t\t\tV2 position, V2 size, real32 depth, V4 color=makeWhite());\n   98  \n\n5 matches across 3 files\n\n\nSearching 31 files for \"TEXTURE_ID_NONE\" (regex, case sensitive)\n\nC:\\Users\\Sam\\Documents\\under-london\\src\\render_gl.cpp:\n  381  \t\t\t\t\tif (i == 0)\n  382  \t\t\t\t\t{\n  383: \t\t\t\t\t\trenderer->textureInfo[i].glTextureID = TEXTURE_ID_NONE;\n  384  \t\t\t\t\t}\n  385  \t\t\t\t\telse\n  ...\n  466  // {\n  467  // \tGL_TextureRegion *region = renderer->textureAtlas.textureRegions + textureAtlasItem;\n  468: // \tGLint textureID = (textureAtlasItem > 0) ? region->textureID : TEXTURE_ID_NONE;\n  469  \n  470  // \tdrawQuad(buffer, rectCentreSize(position, size), depth, textureID, region->uv, color);\n  ...\n  558  \t\t\t}\n  559  \n  560: \t\t\tif (texture->glTextureID == TEXTURE_ID_NONE)\n  561  \t\t\t{\n  562  \t\t\t\trenderer->currentShader = ShaderProgram_Untextured;\n\nC:\\Users\\Sam\\Documents\\under-london\\src\\render_gl.h:\n   94  \n   95  const GLint TEXTURE_ID_INVALID = -99999;\n   96: const GLint TEXTURE_ID_NONE = -1;\n   97  \n   98  inline void checkForGLError()\n\n4 matches across 2 files\n\n\nSearching 31 files for \"addTextureRegion\" (regex, case sensitive)\n\nC:\\Users\\Sam\\Documents\\under-london\\src\\assets.cpp:\n   42  }\n   43  \n   44: TextureRegion *addTextureRegion(AssetManager *assets, TextureAssetType type, char *filename, Rect pixelUV, bool isAlphaPremultiplied=false)\n   45  {\n   46  \tASSERT(assets->textureRegionCount < ArrayCount(assets->textureRegions), \"No room for texture region\");\n\nC:\\Users\\Sam\\Documents\\under-london\\src\\main.cpp:\n  108  \n  109  \tAssetManager *assets = createAssetManager();\n  110: \taddTextureRegion(assets, TextureAssetType_Map1, \"London-Strand-Holbron-Bloomsbury.png\",\n  111  \t                 irectXYWH(0,0,2002,1519), false);\n  112  \tloadTextures(assets);\n\n2 matches across 2 files\n\n\nSearching 31 files for \"isValid\" (regex, case sensitive)\n\nC:\\Users\\Sam\\Documents\\under-london\\src\\bmfont.h:\n  152  #if 0\n  153  \t\t\t\t\tGL_Texture *texture = GL_loadTexture(renderer, pageStart, false);\n  154: \t\t\t\t\tASSERT(texture->isValid, \"Font texture failed to load!\");\n  155  \t\t\t\t\ttextureWidth = (real32) texture->w;\n  156  \t\t\t\t\ttextureHeight = (real32) texture->h;\n\nC:\\Users\\Sam\\Documents\\under-london\\src\\render_gl.cpp:\n   47  \t\tSDL_LogCritical(SDL_LOG_CATEGORY_ERROR,\n   48  \t\t\t\"Failed to load '%s'!\\n%s\", filename, IMG_GetError());\n   49: \t\ttexture->isValid = false;\n   50  \t}\n   51  \telse\n   ..\n  100  \t\tglTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP_TO_BORDER);\n  101  \n  102: \t\ttexture->isValid = true;\n  103  \t\ttexture->w = surface->w;\n  104  \t\ttexture->h = surface->h;\n  ...\n  117  \n  118  \tGL_Texture *texMap1 = GL_loadTexture(renderer, \"London-Strand-Holbron-Bloomsbury.png\", false);\n  119: \tif (!texMap1->isValid)\n  120  \t{\n  121  \t\tsuccessfullyLoadedAllTextures = false;\n  ...\n  273  \t\t\tGLint programSuccess = GL_FALSE;\n  274  \t\t\tglGetProgramiv(result.shaderProgramID, GL_LINK_STATUS, &programSuccess);\n  275: \t\t\tresult.isValid = (programSuccess == GL_TRUE);\n  276  \n  277: \t\t\tif (!result.isValid)\n  278  \t\t\t{\n  279  \t\t\t\tTemporaryMemoryArena tempArena = beginTemporaryMemory(&renderer->renderArena);\n  ...\n  289  \t\t\t\t{\n  290  \t\t\t\t\tSDL_LogCritical(SDL_LOG_CATEGORY_ERROR, \"aPosition is not a valid glsl program variable!\\n\");\n  291: \t\t\t\t\tresult.isValid = false;\n  292  \t\t\t\t}\n  293  \t\t\t\tresult.aColorLoc = glGetAttribLocation(result.shaderProgramID, \"aColor\");\n  ...\n  295  \t\t\t\t{\n  296  \t\t\t\t\tSDL_LogCritical(SDL_LOG_CATEGORY_ERROR, \"aColor is not a valid glsl program variable!\\n\");\n  297: \t\t\t\t\tresult.isValid = false;\n  298  \t\t\t\t}\n  299  \n  ...\n  306  \t\t\t\t{\n  307  \t\t\t\t\tSDL_LogCritical(SDL_LOG_CATEGORY_ERROR, \"uProjectionMatrix is not a valid glsl program variable!\\n\");\n  308: \t\t\t\t\tresult.isValid = false;\n  309  \t\t\t\t}\n  310  \n  ...\n  366  \t\t{\n  367  \t\t\trenderer->shaders[ShaderProgram_Textured] = GL_loadShader(renderer, \"textured.vert.gl\", \"textured.frag.gl\");\n  368: \t\t\tsucceeded = renderer->shaders[ShaderProgram_Textured].isValid;\n  369  \n  370  \t\t\tif (succeeded)\n  371  \t\t\t{\n  372  \t\t\t\trenderer->shaders[ShaderProgram_Untextured] = GL_loadShader(renderer, \"untextured.vert.gl\", \"untextured.frag.gl\");\n  373: \t\t\t\tsucceeded = renderer->shaders[ShaderProgram_Untextured].isValid;\n  374  \t\t\t}\n  375  \n  ...\n  476  \tASSERT(renderer->currentShader >= 0 && renderer->currentShader < ShaderProgram_Count, \"Invalid shader!\");\n  477  \tGL_ShaderProgram *activeShader = renderer->shaders + renderer->currentShader;\n  478: \tASSERT(activeShader->isValid, \"Shader not properly loaded!\");\n  479  \n  480  \treturn activeShader;\n\nC:\\Users\\Sam\\Documents\\under-london\\src\\render_gl.h:\n   16  struct GL_Texture\n   17  {\n   18: \tbool isValid;\n   19  \tchar *filename;\n   20  \tGLuint glTextureID;\n   ..\n   42  {\n   43  \tGLuint shaderProgramID;\n   44: \tbool isValid;\n   45  \n   46  \tchar *vertexShaderFilename;\n\n14 matches across 3 files\n\n\nSearching 31 files for \"assignTextureRegion\" (regex, case sensitive)\n\nC:\\Users\\Sam\\Documents\\under-london\\src\\render_gl.cpp:\n    1  // render_gl.cpp\n    2  \n    3: void assignTextureRegion(GL_Renderer *renderer, TextureAssetType item, GL_Texture *texture, real32 x, real32 y, real32 w, real32 h)\n    4  {\n    5  \treal32 tw = (real32) texture->w,\n    .\n   25  \n   26  // Assign to whole texture\n   27: void assignTextureRegion(GL_Renderer *renderer, TextureAssetType item, GL_Texture *texture)\n   28  {\n   29  \treal32 borderX = 1.0f / (real32) texture->w,\n   ..\n  124  \tif (successfullyLoadedAllTextures)\n  125  \t{\n  126: \t\tassignTextureRegion(renderer, TextureAssetType_Map1, texMap1);\n  127  \t}\n  128  \n\n3 matches in 1 file\n",
			"settings":
			{
				"buffer_size": 9664,
				"line_ending": "Windows",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "src/types.h",
			"settings":
			{
				"buffer_size": 10677,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/render_gl.h",
			"settings":
			{
				"buffer_size": 1490,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/render.cpp",
			"settings":
			{
				"buffer_size": 2092,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 288.0,
		"last_filter": "insta",
		"selected_items":
		[
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"Theme",
				"SublimeLinter: Choose Gutter Theme"
			],
			[
				"re",
				"Package Control: Remove Package"
			],
			[
				"Package Control: ",
				"Package Control: Remove Package"
			],
			[
				"control",
				"Package Control: List Packages"
			],
			[
				"packag re",
				"Package Control: Remove Package"
			],
			[
				"pac",
				"Package Control: Upgrade/Overwrite All Packages"
			],
			[
				"sql",
				"Set Syntax: SQL"
			],
			[
				"package control",
				"Package Control: Upgrade/Overwrite All Packages"
			],
			[
				"c++",
				"Set Syntax: C++"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"repo",
				"Package Control: Add Repository"
			],
			[
				"rem",
				"Package Control: Remove Package"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"Package Control: up",
				"Package Control: Upgrade/Overwrite All Packages"
			],
			[
				"flow",
				"Set Syntax: flow file"
			],
			[
				"sssql",
				"Set Syntax: SQL"
			],
			[
				"sssl",
				"Set Syntax: SQL"
			],
			[
				"ssphp",
				"Set Syntax: PHP"
			],
			[
				"php",
				"Set Syntax: PHP"
			],
			[
				"sphp",
				"Set Syntax: PHP"
			],
			[
				"html",
				"Set Syntax: HTML"
			],
			[
				"sscss",
				"Set Syntax: CSS"
			],
			[
				"sshtml",
				"Set Syntax: HTML"
			],
			[
				"ssjs",
				"Set Syntax: JavaScript"
			],
			[
				"package",
				"Package Control: Remove Package"
			],
			[
				"Zen Coding: ",
				"Zen Coding: Zen as you type"
			],
			[
				"pack",
				"Package Control: List Packages"
			],
			[
				"pa",
				"Package Control: List Packages"
			],
			[
				"packag",
				"Package Control: Install Package"
			],
			[
				"ssh",
				"Set Syntax: HTML"
			],
			[
				"Snippet: ",
				"Snippet: Start Docblock"
			]
		],
		"width": 416.0
	},
	"console":
	{
		"height": 230.0,
		"history":
		[
			"build",
			"import urllib.request,os; pr='Preferences.sublime-settings'; ip='ignored_packages'; n='Package Control'; s=sublime.load_settings(pr); ig=s.get(ip); ig.append(n); s.set(ip,ig); sublime.save_settings('Preferences.sublime-settings'); pf=n+'.sublime-package'; urllib.request.install_opener(urllib.request.build_opener(urllib.request.ProxyHandler())); by=urllib.request.urlopen('https://packagecontrol.io/'+pf.replace(' ','%20')).read(); open(os.path.join(sublime.installed_packages_path(),pf),'wb').write(by); ig.remove(n); s.set(ip,ig); sublime.save_settings(pr); print('Package Control: 3.0.0 upgrade successful!')",
			"dir()",
			"dir",
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/Sam/Documents/under-london"
	],
	"file_history":
	[
		"/c/users/sam/documents/under-london/src/render_gl.cppc:/users/sam/documents/under-london/src/render_gl.cpp",
		"/C/Users/Sam/Documents/under-london/src/main.cpp",
		"/C/Users/Sam/Documents/under-london/src/render.cpp",
		"/C/Users/Sam/Documents/under-london/src/render.h",
		"/c/users/sam/documents/under-london/src/bmfont.h",
		"/c/users/sam/documents/under-london/src/font.cpp",
		"/c/users/sam/documents/under-london/src/game_ui.cpp",
		"/c/users/sam/documents/under-london/src/game.cpp",
		"/C/Users/Sam/Documents/under-london/src/render_gl.h",
		"/C/Users/Sam/Documents/under-london/src/ui.h",
		"/c/users/sam/documents/under-london/src/ui.cpp",
		"/C/Users/Sam/Documents/under-london/todo.txt",
		"/C/Users/Sam/Documents/under-london/src/game.cpp",
		"/C/Users/Sam/Documents/under-london/src/render_gl.cpp",
		"/c/users/sam/documents/under-london/src/types.h",
		"/c/users/sam/documents/under-london/src/ui.h",
		"/c/users/sam/documents/under-london/src/input.h",
		"/C/Users/Sam/Documents/under-london/src/input.h",
		"/C/Users/Sam/Documents/under-london/src/game_ui.cpp",
		"/c/users/sam/documents/under london/under-london/src/render.h",
		"/C/Users/Sam/Documents/Under London/under-london/src/input.h",
		"/C/Users/Sam/Documents/Under London/under-london/src/main.cpp",
		"/C/Users/Sam/Documents/Under London/under-london/src/render_gl.h",
		"/c/users/sam/documents/under london/under-london/src/city.cpp",
		"/c/users/sam/documents/under london/under-london/src/game_ui.cpp",
		"/C/Users/Sam/Documents/Under London/under-london/src/render_gl.cpp",
		"/C/Users/Sam/Documents/Under London/under-london/src/memory.h",
		"/C/Users/Sam/Documents/Under London/under-london/src/assets.cpp",
		"/c/users/sam/documents/under london/under-london/src/city.h",
		"/C/Users/Sam/Documents/Under London/under-london/src/bmfont.h",
		"/C/Users/Sam/Documents/Under London/under-london/src/maths.h",
		"/C/Users/Sam/Documents/Under London/under-london/src/types.h",
		"/C/Users/Sam/Documents/Under London/under-london/src/assets.h",
		"/C/Users/Sam/AppData/Roaming/GitExtensions/GitExtensions/Recent/under-london.gitext",
		"/C/Users/Sam/Documents/Under London/under-london/src/render.h",
		"/c/users/sam/documents/under london/under-london/src/bmfont.h",
		"/C/Users/Sam/Documents/Under London/under-london/src/font.cpp",
		"/c/users/sam/documents/under london/under-london/src/game.cpp",
		"/C/Users/Sam/Documents/Under London/under-london/src/ui.cpp",
		"/C/Users/Sam/Documents/Under London/under-london/src/ui.h",
		"/C/Users/Sam/Documents/Under London/under-london/src/file.h",
		"/C/Users/Sam/Documents/Under London/under-london/todo.txt",
		"/C/Users/Sam/Documents/Under London/under-london/include/SDL_video.h",
		"/C/Users/Sam/AppData/Local/Temp/Temp1_50_SDL_and_opengl_2.zip/50_SDL_and_opengl_2/50_SDL_and_opengl_2.cpp",
		"/C/Users/Sam/Documents/Under London/under-london/src/matrix4.h",
		"/C/Users/Sam/Documents/Under London/under-london/src/build.bat",
		"/C/Users/Sam/Documents/Under London/under-london/src/city.cpp",
		"/C/Users/Sam/Documents/Under London/under-london/src/city.h",
		"/C/Users/Sam/Documents/Under London/under-london/src/game.cpp",
		"/C/Users/Sam/Documents/Under London/under-london/src/game_ui.cpp",
		"/C/Users/Sam/Documents/Under London/under-london/src/font.h",
		"/C/Users/Sam/Documents/Citysim/src/bmfont.h",
		"/C/Users/Sam/Documents/Citysim/src/font.cpp",
		"/C/Users/Sam/Documents/Citysim/src/render_gl.h",
		"/C/Users/Sam/Documents/Citysim/src/main.cpp",
		"/C/Users/Sam/Documents/Citysim/src/calendar.h",
		"/C/Users/Sam/Documents/Citysim/src/platform_linux.cpp",
		"/C/Users/Sam/Documents/Under London/under-london/src/build.sh",
		"/E/xampp/apache/logs/error.log",
		"/E/xampp/apache/logs/access.log",
		"/E/xampp/apache/conf/httpd.conf",
		"/C/Users/Sam/Documents/Citysim/src/city.cpp",
		"/C/Users/Sam/Documents/Citysim/src/city.h",
		"/C/Users/Sam/Documents/Citysim/todo.txt",
		"/C/Users/Sam/Documents/Citysim/src/render_gl.cpp",
		"/C/Users/Sam/Documents/Citysim/src/build.bat",
		"/C/Users/Sam/Desktop/achievements.txt",
		"/C/Users/Sam/Documents/Citysim/src/memory.h",
		"/C/Users/Sam/Documents/Citysim/assets/untextured.vert.gl",
		"/C/Users/Sam/Documents/Citysim/assets/untextured.frag.gl",
		"/C/Users/Sam/Documents/Citysim/assets/general.frag.gl",
		"/C/Users/Sam/Documents/Citysim/src/font.h",
		"/C/Users/Sam/Documents/Citysim/src/game_ui.cpp",
		"/C/Users/Sam/Documents/Citysim/src/ui.cpp",
		"/C/Users/Sam/Documents/Citysim/assets/general.vert.gl",
		"/C/Users/Sam/AppData/Roaming/Sublime Text 3/Packages/User/SublimeLinter.sublime-settings",
		"/C/Users/Sam/AppData/Roaming/Sublime Text 3/Packages/SublimeLinter/SublimeLinter.sublime-settings",
		"/C/Users/Sam/AppData/Roaming/Sublime Text 3/Packages/User/Default (Windows).sublime-keymap",
		"/C/Users/Sam/AppData/Roaming/Sublime Text 3/Packages/User/ColorHighlighter.sublime-settings",
		"/C/Users/Sam/AppData/Roaming/Sublime Text 3/Packages/User/C++.sublime-settings",
		"/C/Users/Sam/AppData/Roaming/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/C/Users/Sam/Documents/Citysim/src/random_mt.h",
		"/C/Users/Sam/Documents/Citysim/src/maths.h",
		"/C/Users/Sam/Documents/Citysim/src/stb_perlin.h",
		"/C/Users/Sam/Documents/Citysim/src/simplex.h",
		"/C/Users/Sam/Documents/Citysim/src/pcg_basic.c",
		"/C/Users/Sam/Documents/Citysim/src/pcg_basic.h",
		"/C/Users/Sam/Documents/Citysim/include/SDL_test_random.h",
		"/C/Users/Sam/Documents/Citysim/src/types.h",
		"/c/users/sam/documents/citysim/src/bmfont.h",
		"/C/Users/Sam/Documents/Citysim/src/localisation.h",
		"/C/Users/Sam/AppData/Local/Growtopia/cache/items.dat",
		"/C/Users/Sam/Documents/Citysim/src/ui.h",
		"/c/users/sam/documents/citysim/src/city.cpp",
		"/c/users/sam/documents/citysim/src/worker.cpp",
		"/c/users/sam/documents/citysim/src/field.cpp",
		"/C/Users/Sam/Documents/Citysim/src/input.h",
		"/C/Users/Sam/Documents/Citysim/src/worker.cpp",
		"/C/Users/Sam/Documents/Citysim/include/SDL_keycode.h",
		"/C/Users/Sam/Documents/Citysim/include/SDL_events.h",
		"/C/Users/Sam/Documents/Citysim/include/SDL_scancode.h",
		"/C/Users/Sam/AppData/Roaming/Sublime Text 3/Installed Packages/OpenGL Shading Language (GLSL).sublime-package",
		"/C/Users/Sam/AppData/Roaming/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/C/Users/Sam/AppData/Roaming/Sublime Text 3/Packages/User/GLSL.sublime-settings",
		"/C/Users/Sam/Documents/Citysim/src/immediate-ui.cpp",
		"/C/Users/Sam/Documents/Citysim/src/file.h",
		"/C/Users/Sam/Documents/Citysim/shell.bat",
		"/C/Users/Sam/Documents/Citysim/assets/farm/cursor_build.xcf",
		"/c/users/sam/documents/citysim/src/game_ui.cpp",
		"/C/Users/Sam/Documents/Citysim/include/SDL.h",
		"/c/users/sam/documents/citysim/src/font.cpp",
		"/c/users/sam/documents/citysim/src/ui.h",
		"/c/users/sam/documents/citysim/src/ui.cpp",
		"/c/users/sam/documents/citysim/src/platform_win32.cpp",
		"/c/program files (x86)/windows kits/8.1/include/um/shellapi.h",
		"/c/users/sam/documents/citysim/src/font.h",
		"/C/Users/Sam/Documents/Citysim/include/begin_code.h",
		"/C/Users/Sam/Documents/Java/fishing/fishing-core/src/uk/co/samatkins/fishing/GoogleSignInButton.java",
		"/C/Users/Sam/Documents/Java/fishing/fishing-android/src/uk/co/samatkins/fishing/AndroidGameServices.java",
		"/E/Blender Course/Section 2/l34-periscope.blend",
		"/C/Users/Sam/AppData/Roaming/Sublime Text 3/Packages/Default/Default (Windows).sublime-keymap",
		"/C/Users/Sam/AppData/Roaming/Sublime Text 3/Packages/User/Default (Windows).sublime-mousemap",
		"/C/Users/Sam/Documents/Citysim/src/field.cpp",
		"/C/Users/Sam/Documents/Citysim/src/job.h",
		"/C/Users/Sam/Documents/Citysim/src/job.cpp",
		"/C/Users/Sam/Documents/Citysim/assets/farm/field.xcf",
		"/C/Users/Sam/Documents/Citysim/src/pathing.cpp",
		"/c/users/sam/documents/citysim/src/memory.h"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 104.0,
		"where_history":
		[
			"C:\\Users\\Sam\\Documents\\under-london\\src",
			"<open folders>",
			"C:\\Users\\Sam\\Documents\\Under London\\under-london\\src",
			"C:\\Users\\Sam\\Documents\\Citysim\\src",
			"C:\\Users\\Sam\\Documents\\Citysim\\,-C:\\Users\\Sam\\Documents\\Citysim\\include\\*",
			"C:\\Users\\Sam\\Documents\\Citysim\\,-C:\\Users\\Sam\\Documents\\Citysim\\include",
			"C:\\Users\\Sam\\Documents\\Citysim\\,-C:\\Users\\Sam\\Documents\\Citysim\\",
			"C:\\Users\\Sam\\Documents\\Citysim\\",
			"C:\\Users\\Sam\\Documents\\Citysim\\src",
			"C:\\Users\\Sam\\Documents\\Citysim\\include",
			"C:\\Users\\Sam\\Documents\\Citysim\\src",
			"C:\\Users\\Sam\\Documents\\Citysim\\include",
			"C:\\Users\\Sam\\Documents\\Citysim\\src",
			"<open files>,C:\\Users\\Sam\\Documents\\Citysim\\src",
			"<open files>",
			"<open folders>",
			"<open files>",
			"<open folders>"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"assignTextureRegion",
			"isValid",
			"GL_TEXTURE_2D",
			"sortSpriteBuffer",
			"addTextureRegion",
			"sprite",
			"sprite->uv",
			"sprite",
			"item",
			"sprite",
			"texture->",
			"texture",
			"TEXTURE_ID_NONE",
			"boundGL_TextureID",
			"drawTextureAtlasItem",
			"makeSprite",
			"drawSprite",
			"drawQuad",
			"buffer->sprites",
			"maxSprites",
			"spriteCount",
			"GL_loadTexture",
			"GL_loadTextures",
			"SPRITE_MAX",
			"WORLD_SPRITE_MAX",
			"worldPixelPos",
			"tilePosition",
			"drawTextureAtlasItem",
			"isUI",
			"uiState->uiCamera",
			"projectionMatrix",
			"gameState->uiState",
			"isUI",
			"/2.0f)",
			"zoom",
			"CAMERA_EDGE_SCROLL_MARGIN",
			"clickStartPosition",
			"input->",
			"event.motion",
			"windowSize.y",
			"camera->windowHeight",
			"camera->windowWidth",
			"halfCamWidth",
			"zoom",
			"halfCamHeight",
			"worldCamera",
			"projectionMatrix",
			"inputMoveCamera",
			"Camera",
			"updateCamera",
			"mousePos",
			"unproject",
			"renderer->uiCamera.",
			"renderer->worldCamera.",
			"glViewport",
			"renderer->worldCamera.",
			"unproject",
			"projectionMatrix",
			"glRenderer->worldCamera",
			"renderer",
			"updateAndRenderGameOverUI",
			"generateTerrain",
			"int",
			"TextureAtlasItem",
			"drawAnimator",
			"drawTextureAtlasItem",
			"GL_loadTexture",
			"texture",
			"Texture",
			"texture",
			"result",
			"addTexture",
			"ArrayCount",
			"surface",
			"TextureState",
			"assetsArena",
			"Assert",
			"assert",
			"readBMFont",
			"GL_loadTextures",
			"GLRenderer",
			"GLShaderProgram",
			"TEXTURE_ID_NONE",
			"TEXTURE_ID_INVALID",
			"setCursor",
			"Result = null;",
			"init",
			"initOp",
			"initOP",
			"initOPn",
			"loadTexture",
			"resizeWindow",
			"window",
			"SDL_WINDOW_OPENGL",
			"loadGL_Texture",
			"loadGL_",
			"sellAPotato",
			"BuildingDefinition",
			"glGL_TextureID",
			"successfullyLoadedAllGL_Textures",
			"TextureAtlasItemCount",
			"GL_TextureAtlasItemCount",
			"(\\s)Texture",
			" Texture",
			"Texture",
			"drawSprite",
			"makeSprite",
			"Camera",
			"makeSprite",
			"Sprite",
			"textureID",
			"ALIGN_",
			"Alignment",
			"printf",
			"unproject",
			"generateTerrain",
			"Crysolid",
			"_",
			"?=\n =?utf-8?Q?",
			"GrowID",
			"sc",
			"\\n",
			"jake459",
			"birth",
			" ",
			"general",
			"loadShader",
			"general"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"GL_Renderer",
			"GL_ShaderProgram",
			"\\1GL_Texture",
			"(1)GL_Texture",
			" GL_Texture",
			"GL_Texture",
			"",
			"CENTRE",
			"renderArena",
			"MemoryArena",
			"£",
			"\\xA3",
			"£",
			"drawTextureAtlasItem",
			"ASSERT",
			"renderer->theme.font",
			"&renderer, &tooltip, ",
			"rectXYWH(",
			"setUiLabelOrigin",
			"updateUiLabelPosition",
			"forestDemolishCost",
			"viewport",
			"updateWorldCamera",
			"setCameraPosition",
			"getDaysPerFrame",
			"potatoes",
			"ASSERT",
			"freeUiLabel",
			"createUiLabel",
			"setUiLabelText(",
			"freeUiButton",
			"updateUiButtonGroup",
			"freeUiButtonGroup",
			"freeTexture",
			"freeLabel",
			"createLabel",
			"drawUiTexture",
			"FieldState_Empty",
			"ALIGN_H_CENTER",
			"label",
			"UiLabel",
			"Atlas",
			"tilesTexture"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"folders":
	[
		{
			"path": "C:\\Users\\Sam\\Documents\\under-london"
		}
	],
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/render_gl.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 19469,
						"regions":
						{
						},
						"selection":
						[
							[
								15925,
								15925
							],
							[
								16927,
								16927
							],
							[
								16970,
								16970
							]
						],
						"settings":
						{
							"history_list_is_closing": true,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 7417.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/game.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9212,
						"regions":
						{
						},
						"selection":
						[
							[
								8313,
								8313
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2813.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/assets.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 882,
						"regions":
						{
						},
						"selection":
						[
							[
								385,
								385
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/font.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7458,
						"regions":
						{
						},
						"selection":
						[
							[
								7168,
								7168
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4141.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "src/assets.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3667,
						"regions":
						{
						},
						"selection":
						[
							[
								1111,
								1111
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 158.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "src/render.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2515,
						"regions":
						{
						},
						"selection":
						[
							[
								1715,
								1715
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 950.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				}
			]
		},
		{
			"selected": 4,
			"sheets":
			[
				{
					"buffer": 6,
					"file": "src/main.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4959,
						"regions":
						{
						},
						"selection":
						[
							[
								2633,
								2633
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1173.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 7,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9664,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										143,
										151
									],
									[
										373,
										381
									],
									[
										576,
										584
									],
									[
										829,
										839
									],
									[
										1029,
										1039
									],
									[
										1334,
										1344
									],
									[
										1534,
										1544
									],
									[
										1922,
										1932
									],
									[
										2233,
										2243
									],
									[
										2500,
										2510
									],
									[
										2872,
										2892
									],
									[
										3246,
										3266
									],
									[
										3517,
										3537
									],
									[
										3758,
										3778
									],
									[
										4008,
										4028
									],
									[
										4426,
										4441
									],
									[
										4662,
										4677
									],
									[
										4849,
										4864
									],
									[
										5070,
										5085
									],
									[
										5323,
										5339
									],
									[
										5688,
										5704
									],
									[
										6120,
										6127
									],
									[
										6447,
										6454
									],
									[
										6599,
										6606
									],
									[
										6822,
										6829
									],
									[
										7038,
										7045
									],
									[
										7107,
										7114
									],
									[
										7362,
										7369
									],
									[
										7618,
										7625
									],
									[
										7808,
										7815
									],
									[
										8046,
										8053
									],
									[
										8293,
										8300
									],
									[
										8557,
										8564
									],
									[
										8736,
										8743
									],
									[
										8857,
										8864
									],
									[
										9108,
										9127
									],
									[
										9345,
										9364
									],
									[
										9562,
										9581
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								9573,
								9573
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 9,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 3601.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 0,
					"file": "src/render_gl.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 19469,
						"regions":
						{
						},
						"selection":
						[
							[
								10147,
								10147
							]
						],
						"settings":
						{
							"history_list_is_closing": true,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 8530.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "src/types.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10677,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 7262.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "src/render_gl.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1490,
						"regions":
						{
						},
						"selection":
						[
							[
								224,
								224
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 401.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "src/render.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2092,
						"regions":
						{
						},
						"selection":
						[
							[
								1840,
								1840
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 3.0,
						"translation.y": 76.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 21.0
	},
	"input":
	{
		"height": 35.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 193.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/User/batch-build.sublime-build",
	"project": "",
	"replace":
	{
		"height": 38.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"types",
				"src\\types.h"
			],
			[
				"main",
				"src\\main.cpp"
			],
			[
				"render.h",
				"src\\render.h"
			],
			[
				"render",
				"src\\render_gl.cpp"
			],
			[
				"assets",
				"src\\assets.cpp"
			],
			[
				"ui",
				"src\\ui.h"
			],
			[
				"todo",
				"todo.txt"
			],
			[
				"input",
				"src\\input.h"
			],
			[
				"rend",
				"src\\render.h"
			],
			[
				"math",
				"src\\maths.h"
			],
			[
				"asset",
				"src\\assets.h"
			],
			[
				"file",
				"src\\file.h"
			],
			[
				"ass",
				"src\\assets.cpp"
			],
			[
				"bui",
				"src\\build.bat"
			],
			[
				"font",
				"src\\font.h"
			],
			[
				"typ",
				"src\\types.h"
			],
			[
				"city",
				"src\\city.h"
			],
			[
				"ren",
				"src\\render_gl.cpp"
			],
			[
				"memory",
				"src\\memory.h"
			],
			[
				"ui.cp",
				"src\\ui.cpp"
			],
			[
				"frag",
				"assets\\general.frag.gl"
			],
			[
				"bm",
				"src\\bmfont.h"
			],
			[
				"build",
				"src\\build.bat"
			],
			[
				"vert",
				"assets\\general.vert.gl"
			],
			[
				".gl",
				"assets\\general.frag.gl"
			],
			[
				"stb",
				"src\\stb_perlin.h"
			],
			[
				"rand",
				"include\\SDL_test_random.h"
			],
			[
				"game",
				"src\\game_ui.cpp"
			],
			[
				"gameui",
				"src\\game_ui.cpp"
			],
			[
				"font.h",
				"src\\font.h"
			],
			[
				"scan",
				"include\\SDL_scancode.h"
			],
			[
				"ver",
				"assets\\general.vert.gl"
			],
			[
				".frag",
				"assets\\general.frag.gl"
			],
			[
				"gamu",
				"src\\game_ui.cpp"
			],
			[
				"inp",
				"src\\input.h"
			],
			[
				"mem",
				"src\\memory.h"
			],
			[
				"cal",
				"src\\calendar.h"
			],
			[
				"bmfo",
				"src\\bmfont.h"
			],
			[
				"builf",
				"assets\\farm\\cursor_build.xcf"
			],
			[
				"buil",
				"src\\build.bat"
			],
			[
				"memo",
				"src\\memory.h"
			],
			[
				"ty",
				"src\\types.h"
			],
			[
				"rende",
				"src\\render_gl.cpp"
			],
			[
				"job",
				"src\\job.h"
			],
			[
				"city.h",
				"src\\city.h"
			],
			[
				"field",
				"assets\\farm\\field.xcf"
			],
			[
				"path",
				"src\\pathing.cpp"
			],
			[
				"city.c",
				"src\\city.cpp"
			],
			[
				"job.c",
				"src\\job.cpp"
			],
			[
				"worker",
				"src\\worker.cpp"
			],
			[
				"type",
				"src\\types.h"
			],
			[
				"cit",
				"src\\city.cpp"
			],
			[
				"game_ui",
				"src\\game_ui.cpp"
			],
			[
				"city.cpp",
				"src\\city.cpp"
			],
			[
				"to",
				"todo.txt"
			],
			[
				"gl",
				"include\\GL\\glew.h"
			],
			[
				"fiel",
				"src\\field.cpp"
			],
			[
				"build.bat",
				"src\\build.bat"
			],
			[
				"matr",
				"src\\matrix4.h"
			],
			[
				"bmfont",
				"src\\bmfont.h"
			],
			[
				"matrix4",
				"src\\matrix4.h"
			],
			[
				"bu",
				"src\\build.bat"
			],
			[
				"surface",
				"include\\SDL_surface.h"
			],
			[
				"sdl_surface",
				"include\\SDL_surface.h"
			],
			[
				"sdl_keycode",
				"include\\SDL_keycode.h"
			],
			[
				"sdl_sca",
				"include\\SDL_scancode.h"
			],
			[
				"sdl_scane",
				"include\\SDL_scancode.h"
			],
			[
				"main.cpp",
				"src\\main.cpp"
			],
			[
				"input.h",
				"src\\input.h"
			],
			[
				"calend",
				"src\\calendar.h"
			],
			[
				"sdl_rect",
				"include\\SDL_rect.h"
			],
			[
				"ui.cpp",
				"src\\ui.cpp"
			],
			[
				"sdl_colo",
				"include\\SDL_gamecontroller.h"
			],
			[
				"render.c",
				"src\\render.cpp"
			],
			[
				"ui.h",
				"src\\ui.h"
			],
			[
				"sdl_ren",
				"include\\SDL_render.h"
			],
			[
				"sdl_rec",
				"include\\SDL_rect.h"
			],
			[
				"head",
				"header.php"
			],
			[
				"view",
				"lib/View.php"
			],
			[
				"header",
				"view/header.php"
			],
			[
				"chosen",
				"css/chosen.css"
			],
			[
				"model",
				"lib/Model.php"
			],
			[
				"css",
				"css/style.css"
			],
			[
				"create",
				"view/thirdparties/create.php"
			],
			[
				"transactions",
				"controller/transactions.php"
			],
			[
				"inde",
				"index.php"
			],
			[
				"delete",
				"view/categories/delete.php"
			],
			[
				"tran",
				"view/transactions/view.php"
			],
			[
				"transa",
				"controller/transactions.php"
			],
			[
				"edit",
				"view/categories/edit.php"
			],
			[
				"index",
				"view/categories/index.php"
			],
			[
				"cont",
				"lib/Controller.php"
			],
			[
				"foote",
				"view/footer.php"
			],
			[
				"lo",
				"view/login/index.php"
			],
			[
				"login",
				"controller/login.php"
			],
			[
				"datab",
				"lib/Database.php"
			],
			[
				"ode",
				"lib/Model.php"
			],
			[
				"collection",
				"lib/Collection.php"
			],
			[
				"boots",
				"lib/Bootstrap.php"
			],
			[
				"sess",
				"lib/Session.php"
			],
			[
				"contr",
				"lib/Controller.php"
			],
			[
				"user",
				"lib/User.php"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"C:\\Users\\Sam\\Documents\\Websites\\wp-theme-2013\\wp-theme-2013.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 35.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"GLint",
				"GLint"
			],
			[
				"GL_TEXTURE0",
				"GL_TEXTURE0"
			],
			[
				"GL_TEXTURE",
				"GL_TEXTURE0"
			],
			[
				"tilePosition",
				"tilePosition"
			],
			[
				"SDL_Color",
				"SDL_Color"
			],
			[
				"getDays",
				"getDaysPerFrame"
			],
			[
				"GetScancodeFromKey",
				"SDL_GetScancodeFromKey"
			],
			[
				"updateUiButton",
				"updateUiButtonGroup"
			],
			[
				"drawUiB",
				"drawUiButton"
			],
			[
				"drawUiRect",
				"drawUiRect"
			],
			[
				"hireworker",
				"hireWorker"
			],
			[
				"freeUiL",
				"freeUiLabel"
			],
			[
				"SDLKey",
				"_SDL_keycode_h"
			],
			[
				"centreC",
				"centreCameraOnPosition"
			],
			[
				"_SDL_main",
				"_SDL_main_h"
			],
			[
				"setUiLabelText",
				"setUiLabelText"
			],
			[
				"initUiL",
				"initUiLabel"
			],
			[
				"drawUiLabel",
				"drawUiLabel"
			],
			[
				"stb_per",
				"stb_perlin_noise3"
			],
			[
				"hireWorker",
				"hireWorker"
			],
			[
				"SDL_C",
				"SDL_Color"
			],
			[
				"updateUiB",
				"updateUiButtonGroup"
			],
			[
				"takeJ",
				"takeJob"
			],
			[
				"drawAnimator",
				"drawAnimator"
			],
			[
				"drawAtWorl",
				"drawAtWorldPos"
			],
			[
				"drawWor",
				"drawWorker"
			],
			[
				"freete",
				"freeTexture"
			],
			[
				"settext",
				"setText"
			],
			[
				"drawatw",
				"drawAtWorldPos"
			],
			[
				"drawAtWorld",
				"drawAtWorldPos"
			],
			[
				"",
				"APIENTRY"
			]
		],
		"width": 496.0
	},
	"selected_group": 1,
	"settings":
	{
		"last_automatic_layout":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		]
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 268.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
